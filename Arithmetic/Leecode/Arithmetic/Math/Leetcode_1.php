<?php

#***************************************************************************************************************************
# 1. 整数反转
// 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

// 示例 1:
// 输入: 123
// 输出: 321

//  示例 2:
// 输入: -123
// 输出: -321

// 示例 3:
// 输入: 120
// 输出: 21

// 示例 4:
// 输入: 0
// 输出: 0

// 示例 5:
// 输入: 1534236469 超过了数值范围
// 输出: 0

// 注意:
// 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−2^31,  2^31 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。

#***************************************************************************************************************************

function reverse($x)
{
    if ($x == 0) {
        return 0;
    } else if ($x > 0) {
        $reuslt = ltrim(strrev($x), '0');
        return $reuslt > pow(2, 31) ? 0 : $reuslt;
    } else {
        $reuslt = ltrim(strrev(abs($x)), '0');
        return $reuslt > pow(2, 31) ? 0 : '-' . $reuslt;
    }
}

// 方法二 不断获取个位数，然后累计*10
// function reverse($x)
// {
//     if (!is_int($x)) return 0;
//     $res = 0;
//     $max = pow(2, 31) - 1;
//     $min = pow(-2, 31);
//     while ($x != 0) {
//         $remainder = $x % 10;
//         $x = ($x - $remainder) / 10;
//         $res = $res * 10 + $remainder;
//     }
//     if ($res > $max) return 0;
//     if ($res < $min) return 0;
//     return $res;
// }


var_dump(reverse(1534236469));
